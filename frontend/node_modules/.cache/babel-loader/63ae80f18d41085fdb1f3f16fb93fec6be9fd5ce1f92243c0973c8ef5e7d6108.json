{"ast":null,"code":"var _jsxFileName = \"D:\\\\inotebook\\\\src\\\\context\\\\notes\\\\NoteState.js\",\n  _s = $RefreshSig$();\nimport NoteContext from \"./noteContext\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteState = props => {\n  _s();\n  const Host = \"http://localhost:5000\";\n  const noteinitial = [];\n  const [notes, setnotes] = useState(noteinitial);\n\n  // Get all notes\n  const getnote = async () => {\n    // API call\n    const response = await fetch(`${Host}/api/notes/fetchAllUser`, {\n      method: 'GET',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJVc2VyIjp7ImlkIjoiNjQ0ZDYwZjg1ZWIxYzIwNDM1MGQ1ZDg3In0sImlhdCI6MTY4Mjc5NTE3NX0.v2Ee415ap7dzqVGjk8vQgfb5nBz_SvdsrNOjxJkF5X0\"\n      },\n      body: JSON.stringify(title, description, tag)\n    });\n  };\n  // Add a note\n  const addnote = async (title, description, tag) => {\n    console.log(\"adding a new note\");\n    // API call\n    const response = await fetch(`${Host}/api/notes/addnote`, {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJVc2VyIjp7ImlkIjoiNjQ0ZDYwZjg1ZWIxYzIwNDM1MGQ1ZDg3In0sImlhdCI6MTY4Mjc5NTE3NX0.v2Ee415ap7dzqVGjk8vQgfb5nBz_SvdsrNOjxJkF5X0\"\n      },\n      body: JSON.stringify(title, description, tag)\n    });\n\n    //Logic to add a note\n    console.log(\"adding a new note\");\n    const note = {\n      \"_id\": \"64590abe00ddfcd0b2500f234\",\n      \"user\": \"644d60f85eb1c204350df5d87\",\n      \"title\": title,\n      \"description\": description,\n      \"tag\": tag,\n      \"date\": \"2023-05-08T14:44:14.359Z\",\n      \"__v\": 0\n    };\n    setnotes(notes.concat(note));\n  };\n\n  // Delete a note\n  const deleteNote = id => {\n    const newnote = notes.filter(note => {\n      return note._id !== id;\n    });\n    setnotes(newnote);\n  };\n\n  // Edit a note\n  const editNote = async (id, title, description, tag) => {\n    // API call\n    const response = await fetch(`${Host}/api/notes/updatenote/${id}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJVc2VyIjp7ImlkIjoiNjQ0ZDYwZjg1ZWIxYzIwNDM1MGQ1ZDg3In0sImlhdCI6MTY4Mjc5NTE3NX0.v2Ee415ap7dzqVGjk8vQgfb5nBz_SvdsrNOjxJkF5X0\"\n      },\n      body: JSON.stringify(title, description, tag)\n    });\n    const json = response.json();\n\n    //Logic to edit in client\n    for (let i = 0; i < notes.length; i++) {\n      const element = notes[i];\n      if (element._id === id) {\n        element.title = title;\n        element.description = description;\n        element.tag = tag;\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(NoteContext.Provider, {\n    value: {\n      notes,\n      addnote,\n      deleteNote,\n      editNote\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n_s(NoteState, \"Xd3fGWTOS+7ffloDvYyEd2Ts+Ok=\");\n_c = NoteState;\nexport default NoteState;\nvar _c;\n$RefreshReg$(_c, \"NoteState\");","map":{"version":3,"names":["NoteContext","useState","jsxDEV","_jsxDEV","NoteState","props","_s","Host","noteinitial","notes","setnotes","getnote","response","fetch","method","headers","body","JSON","stringify","title","description","tag","addnote","console","log","note","concat","deleteNote","id","newnote","filter","_id","editNote","json","i","length","element","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/inotebook/src/context/notes/NoteState.js"],"sourcesContent":["import NoteContext from \"./noteContext\";\nimport { useState } from \"react\";\n\nconst NoteState =(props)=>{\n  const Host = \"http://localhost:5000\";\n    const noteinitial =[]\n    const[notes,setnotes] = useState(noteinitial);\n\n     // Get all notes\n    const getnote= async()=>{\n      // API call\n      const response = await fetch(`${Host}/api/notes/fetchAllUser`,{\n        method: 'GET',\n        headers:{\n          \"Content-Type\": \"application/json\",\n          \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJVc2VyIjp7ImlkIjoiNjQ0ZDYwZjg1ZWIxYzIwNDM1MGQ1ZDg3In0sImlhdCI6MTY4Mjc5NTE3NX0.v2Ee415ap7dzqVGjk8vQgfb5nBz_SvdsrNOjxJkF5X0\"\n        },\n        body: JSON.stringify(title,description,tag)\n      });\n    }\n    // Add a note\n    const addnote= async(title,description,tag)=>{\n      console.log(\"adding a new note\");\n      // API call\n      const response = await fetch(`${Host}/api/notes/addnote`,{\n        method: 'POST',\n        headers:{\n          \"Content-Type\": \"application/json\",\n          \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJVc2VyIjp7ImlkIjoiNjQ0ZDYwZjg1ZWIxYzIwNDM1MGQ1ZDg3In0sImlhdCI6MTY4Mjc5NTE3NX0.v2Ee415ap7dzqVGjk8vQgfb5nBz_SvdsrNOjxJkF5X0\"\n        },\n        body: JSON.stringify(title,description,tag)\n      });\n      \n      //Logic to add a note\n      console.log(\"adding a new note\");\n      const note = {\n        \"_id\": \"64590abe00ddfcd0b2500f234\",\n        \"user\": \"644d60f85eb1c204350df5d87\",\n        \"title\": title,\n        \"description\": description,\n        \"tag\": tag,\n        \"date\": \"2023-05-08T14:44:14.359Z\",\n        \"__v\": 0\n      }\n      setnotes(notes.concat(note))\n    }\n\n    // Delete a note\n    const deleteNote=(id)=>{\n      const newnote = notes.filter((note)=>{return note._id!==id})\n      setnotes(newnote);\n    }\n\n    // Edit a note\n    const editNote= async(id,title,description,tag)=>{\n      // API call\n      const response = await fetch(`${Host}/api/notes/updatenote/${id}`,{\n        method: \"POST\",\n        headers:{\n          \"Content-Type\": \"application/json\",\n          \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJVc2VyIjp7ImlkIjoiNjQ0ZDYwZjg1ZWIxYzIwNDM1MGQ1ZDg3In0sImlhdCI6MTY4Mjc5NTE3NX0.v2Ee415ap7dzqVGjk8vQgfb5nBz_SvdsrNOjxJkF5X0\"\n        },\n        body: JSON.stringify(title,description,tag)\n      });\n      const json = response.json();\n\n      //Logic to edit in client\n        for(let i=0;i<notes.length;i++){\n            const element = notes[i];\n            if(element._id===id){\n              element.title = title;\n              element.description = description;\n              element.tag = tag;\n            }\n        }\n    }\n    \n \n    return(\n        <NoteContext.Provider value={{notes,addnote,deleteNote,editNote}}>\n            {props.children}\n        </NoteContext.Provider>\n    )\n}\n\nexport default NoteState"],"mappings":";;AAAA,OAAOA,WAAW,MAAM,eAAe;AACvC,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,SAAS,GAAGC,KAAK,IAAG;EAAAC,EAAA;EACxB,MAAMC,IAAI,GAAG,uBAAuB;EAClC,MAAMC,WAAW,GAAE,EAAE;EACrB,MAAK,CAACC,KAAK,EAACC,QAAQ,CAAC,GAAGT,QAAQ,CAACO,WAAW,CAAC;;EAE5C;EACD,MAAMG,OAAO,GAAE,MAAAA,CAAA,KAAS;IACtB;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEN,IAAK,yBAAwB,EAAC;MAC5DO,MAAM,EAAE,KAAK;MACbC,OAAO,EAAC;QACN,cAAc,EAAE,kBAAkB;QAClC,YAAY,EAAE;MAChB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACC,KAAK,EAACC,WAAW,EAACC,GAAG;IAC5C,CAAC,CAAC;EACJ,CAAC;EACD;EACA,MAAMC,OAAO,GAAE,MAAAA,CAAMH,KAAK,EAACC,WAAW,EAACC,GAAG,KAAG;IAC3CE,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IAChC;IACA,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEN,IAAK,oBAAmB,EAAC;MACvDO,MAAM,EAAE,MAAM;MACdC,OAAO,EAAC;QACN,cAAc,EAAE,kBAAkB;QAClC,YAAY,EAAE;MAChB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACC,KAAK,EAACC,WAAW,EAACC,GAAG;IAC5C,CAAC,CAAC;;IAEF;IACAE,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IAChC,MAAMC,IAAI,GAAG;MACX,KAAK,EAAE,2BAA2B;MAClC,MAAM,EAAE,2BAA2B;MACnC,OAAO,EAAEN,KAAK;MACd,aAAa,EAAEC,WAAW;MAC1B,KAAK,EAAEC,GAAG;MACV,MAAM,EAAE,0BAA0B;MAClC,KAAK,EAAE;IACT,CAAC;IACDX,QAAQ,CAACD,KAAK,CAACiB,MAAM,CAACD,IAAI,CAAC,CAAC;EAC9B,CAAC;;EAED;EACA,MAAME,UAAU,GAAEC,EAAE,IAAG;IACrB,MAAMC,OAAO,GAAGpB,KAAK,CAACqB,MAAM,CAAEL,IAAI,IAAG;MAAC,OAAOA,IAAI,CAACM,GAAG,KAAGH,EAAE;IAAA,CAAC,CAAC;IAC5DlB,QAAQ,CAACmB,OAAO,CAAC;EACnB,CAAC;;EAED;EACA,MAAMG,QAAQ,GAAE,MAAAA,CAAMJ,EAAE,EAACT,KAAK,EAACC,WAAW,EAACC,GAAG,KAAG;IAC/C;IACA,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEN,IAAK,yBAAwBqB,EAAG,EAAC,EAAC;MAChEd,MAAM,EAAE,MAAM;MACdC,OAAO,EAAC;QACN,cAAc,EAAE,kBAAkB;QAClC,YAAY,EAAE;MAChB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACC,KAAK,EAACC,WAAW,EAACC,GAAG;IAC5C,CAAC,CAAC;IACF,MAAMY,IAAI,GAAGrB,QAAQ,CAACqB,IAAI,EAAE;;IAE5B;IACE,KAAI,IAAIC,CAAC,GAAC,CAAC,EAACA,CAAC,GAACzB,KAAK,CAAC0B,MAAM,EAACD,CAAC,EAAE,EAAC;MAC3B,MAAME,OAAO,GAAG3B,KAAK,CAACyB,CAAC,CAAC;MACxB,IAAGE,OAAO,CAACL,GAAG,KAAGH,EAAE,EAAC;QAClBQ,OAAO,CAACjB,KAAK,GAAGA,KAAK;QACrBiB,OAAO,CAAChB,WAAW,GAAGA,WAAW;QACjCgB,OAAO,CAACf,GAAG,GAAGA,GAAG;MACnB;IACJ;EACJ,CAAC;EAGD,oBACIlB,OAAA,CAACH,WAAW,CAACqC,QAAQ;IAACC,KAAK,EAAE;MAAC7B,KAAK;MAACa,OAAO;MAACK,UAAU;MAACK;IAAQ,CAAE;IAAAO,QAAA,EAC5DlC,KAAK,CAACkC;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACI;AAE/B,CAAC;AAAArC,EAAA,CAhFKF,SAAS;AAAAwC,EAAA,GAATxC,SAAS;AAkFf,eAAeA,SAAS;AAAA,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}