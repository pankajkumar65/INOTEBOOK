{"ast":null,"code":"var _jsxFileName = \"D:\\\\inotebook\\\\src\\\\context\\\\notes\\\\NoteState.js\",\n  _s = $RefreshSig$();\nimport NoteContext from \"./noteContext\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteState = props => {\n  _s();\n  const Host = \"http://localhost:5000\";\n  const noteinitial = [];\n  const [notes, setnotes] = useState(noteinitial);\n\n  // Get all notes\n\n  const getnote = async () => {\n    // API call\n    const response = await fetch(`${Host}/api/notes/fetchAllUser`, {\n      method: 'GET',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": loca\n      }\n    });\n    const note = await response.json();\n    setnotes(note);\n  };\n  // Add a note\n  const addnote = async (title, description, tag) => {\n    // API call\n    const response = await fetch(`${Host}/api/notes/addnote`, {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": loca\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    const note = await response.json();\n    setnotes(notes.concat(note));\n  };\n\n  // Delete a note\n  const deleteNote = async id => {\n    // API call\n    const response = await fetch(`${Host}/api/notes/deletenote/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": loca\n      }\n    });\n    const json = await response.json();\n    console.log(json);\n    const newnote = notes.filter(note => {\n      return note._id !== id;\n    });\n    setnotes(newnote);\n  };\n\n  // Edit a note\n  const editnote = async (id, title, description, tag) => {\n    // API call\n    const response = await fetch(`${Host}/api/notes/updatenote/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": loca\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    const json = await response.json();\n    console.log(json);\n    const newnote = JSON.parse(JSON.stringify(notes));\n\n    //Logic to edit in client\n    for (let i = 0; i < newnote.length; i++) {\n      const element = newnote[i];\n      if (element._id === id) {\n        element.title = title;\n        element.description = description;\n        element.tag = tag;\n        break;\n      }\n    }\n    setnotes(newnote);\n  };\n  return /*#__PURE__*/_jsxDEV(NoteContext.Provider, {\n    value: {\n      notes,\n      addnote,\n      deleteNote,\n      editnote,\n      getnote\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(NoteState, \"LOA2dDV9RndwdQ3XB+PWJ1wXv5s=\");\n_c = NoteState;\nexport default NoteState;\nvar _c;\n$RefreshReg$(_c, \"NoteState\");","map":{"version":3,"names":["NoteContext","useState","jsxDEV","_jsxDEV","NoteState","props","_s","Host","noteinitial","notes","setnotes","getnote","response","fetch","method","headers","loca","note","json","addnote","title","description","tag","body","JSON","stringify","concat","deleteNote","id","console","log","newnote","filter","_id","editnote","parse","i","length","element","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/inotebook/src/context/notes/NoteState.js"],"sourcesContent":["import NoteContext from \"./noteContext\";\nimport { useState } from \"react\";\n\nconst NoteState = (props) => {\n  const Host = \"http://localhost:5000\";\n  const noteinitial = []\n  const [notes, setnotes] = useState(noteinitial);\n\n  // Get all notes\n\n  const getnote = async () => {\n    // API call\n    const response = await fetch(`${Host}/api/notes/fetchAllUser`, {\n      method: 'GET',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": loca\n      }\n    });\n    const note = await response.json();\n    setnotes(note);\n  }\n  // Add a note\n  const addnote = async (title, description, tag) => {\n\n    // API call\n    const response = await fetch(`${Host}/api/notes/addnote`, {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": loca\n      },\n      body: JSON.stringify({ title, description, tag })\n    });\n\n    const note = await response.json();\n\n    setnotes(notes.concat(note))\n  }\n\n  // Delete a note\n  const deleteNote = async (id) => {\n    // API call\n    const response = await fetch(`${Host}/api/notes/deletenote/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": loca\n      }\n    });\n    const json = await response.json();\n    console.log(json);\n    const newnote = notes.filter((note) => { return note._id !== id })\n    setnotes(newnote);\n  }\n\n  // Edit a note\n  const editnote = async (id, title, description, tag) => {\n    // API call\n    const response = await fetch(`${Host}/api/notes/updatenote/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": loca\n      },\n      body: JSON.stringify({ title, description, tag })\n    });\n    const json = await response.json();\n    console.log(json);\n    const newnote = JSON.parse(JSON.stringify(notes))\n\n    //Logic to edit in client\n    for (let i = 0; i < newnote.length; i++) {\n      const element = newnote[i];\n      if (element._id === id) {\n        element.title = title;\n        element.description = description;\n        element.tag = tag;\n        break;\n      }\n    }\n\n    setnotes(newnote);\n\n  }\n\n\n  return (\n    <NoteContext.Provider value={{ notes, addnote, deleteNote, editnote, getnote }}>\n      {props.children}\n    </NoteContext.Provider>\n  )\n}\n\nexport default NoteState"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}